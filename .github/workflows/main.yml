name: Windows RDP

on: [workflow_dispatch]

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Set up ngrok
        run: |
          Invoke-WebRequest -Uri https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-windows-amd64.zip -OutFile ngrok.zip
          Expand-Archive ngrok.zip -DestinationPath .
          Remove-Item ngrok.zip

      - name: Set ngrok authtoken
        run: .\ngrok.exe config add-authtoken "YOUR_NGROK_TOKEN"

      - name: Enable RDP
        run: |
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0
          Enable-NetFirewallRule -DisplayGroup "Remote Desktop"

      - name: Set RDP user password
        run: net user runneradmin MySecurePassword123!

      - name: Start ngrok tunnel for RDP
        run: Start-Process -NoNewWindow -FilePath .\ngrok.exe -ArgumentList "tcp 3389"

      - name: Wait for ngrok tunnel to be ready and print connection info
        shell: pwsh
        run: |
          $ErrorActionPreference = "SilentlyContinue"
          for ($i = 0; $i -lt 30; $i++) {
            try {
              $json = Invoke-RestMethod -Uri http://127.0.0.1:4040/api/tunnels
              if ($json.tunnels[0].public_url) {
                Write-Host "Ngrok Tunnel Ready!"
                $url = $json.tunnels[0].public_url
                $url = $url -replace "tcp://", ""
                Write-Host "======================================"
                Write-Host "Connect to this address using RDP:"
                Write-Host "Address: $url"
                Write-Host "Username: runneradmin"
                Write-Host "Password: MySecurePassword123!"
                Write-Host "======================================"
                break
              }
            } catch {}
            Start-Sleep -Seconds 2
          }
          if (-not $url) {
            Write-Host "Ngrok tunnel did not become available in time."
            exit 1
          }
